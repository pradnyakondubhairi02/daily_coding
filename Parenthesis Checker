problem:
Given an expression string x. Examine whether the pairs and the orders of {,},(,),[,] are correct in exp.
For example, the function should return 'true' for exp = [()]{}{[()()]()} and 'false' for exp = [(]).

Note: The drive code prints "balanced" if function return true, otherwise it prints "not balanced".

soltuon:
//{ Driver Code Starts
#include<bits/stdc++.h>
using namespace std;


// } Driver Code Ends

class Solution
{
    public:
    //Function to check if brackets are balanced or not.
    bool ispar(string x)
    {
         stack<char>temp;
         
         for(int i=0;i<x.length();i++){
             if(temp.empty()){
                 temp.push(x[i]);
             }
             else if((temp.top() == '(' && x[i] == ')') ||
                    (temp.top() == '[' && x[i] == ']') ||
                    (temp.top() == '{' && x[i] == '}'))   {
                        temp.pop();
                    }
            else{
                temp.push(x[i]);
            }
         }
         
         if(temp.empty()) {
             return true;
         }
         return false;
    }

};

//{ Driver Code Starts.

int main()
{
   int t;
   string a;
   cin>>t;
   while(t--)
   {
       cin>>a;
       Solution obj;
       if(obj.ispar(a))
        cout<<"balanced"<<endl;
       else
        cout<<"not balanced"<<endl;
   }
}
// } Driver Code Ends
