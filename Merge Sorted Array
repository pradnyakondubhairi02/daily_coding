problem:
You are given two integer arrays nums1 and nums2, sorted in non-decreasing order, and two integers m and n, representing the number of elements in nums1 and nums2 respectively.

Merge nums1 and nums2 into a single array sorted in non-decreasing order.

The final sorted array should not be returned by the function, but instead be stored inside the array nums1. To accommodate this, nums1 has a length of m + n, where the first m elements denote the elements that should be merged, and the last n elements are set to 0 and should be ignored. nums2 has a length of n.


solution:

class Solution {
public:
    void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) {
        int i=0,j=0,k=0;
       vector<int>nums3;
        while(i< nums1.size()){
            nums3[k++]=nums1[i]++;
        }

        while(j<nums2.size()){
            nums3[k++]=nums2[j++];
        }

        sort(nums3.begin(),nums3.end());

        for(int i=0;i<nums3.size();i++){
            cout<<nums3[i];
        }
    }
};
